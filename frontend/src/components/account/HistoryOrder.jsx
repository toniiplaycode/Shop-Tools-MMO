import React, { useState } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faMagnifyingGlass, faCopy } from "@fortawesome/free-solid-svg-icons";

const HistoryOrder = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 10;

  const orders = [
    {
      id: 1,
      toolName: "VPS Proxy Builder",
      licenseKey: "XXXX-XXXX-XXXX",
      duration: "30 ng√†y",
      payment: "200,000ƒë",
      pcName: "DESKTOP-ABC123",
      status: "ƒêang ho·∫°t ƒë·ªông",
    },
    {
      id: 1,
      toolName: "VPS Proxy Builder",
      licenseKey: "XXXX-XXXX-XXXX",
      duration: "30 ng√†y",
      payment: "200,000ƒë",
      pcName: "DESKTOP-ABC123",
      status: "ƒêang ho·∫°t ƒë·ªông",
    },
    {
      id: 1,
      toolName: "VPS Proxy Builder",
      licenseKey: "XXXX-XXXX-XXXX",
      duration: "30 ng√†y",
      payment: "200,000ƒë",
      pcName: "DESKTOP-ABC123",
      status: "ƒêang ho·∫°t ƒë·ªông",
    },
    {
      id: 1,
      toolName: "VPS Proxy Builder",
      licenseKey: "XXXX-XXXX-XXXX",
      duration: "30 ng√†y",
      payment: "200,000ƒë",
      pcName: "DESKTOP-ABC123",
      status: "ƒêang ho·∫°t ƒë·ªông",
    },
    {
      id: 1,
      toolName: "VPS Proxy Builder",
      licenseKey: "XXXX-XXXX-XXXX",
      duration: "30 ng√†y",
      payment: "200,000ƒë",
      pcName: "DESKTOP-ABC123",
      status: "ƒêang ho·∫°t ƒë·ªông",
    },
    // Th√™m c√°c orders kh√°c...
  ];

  // T√≠nh to√°n s·ªë trang
  const totalPages = Math.ceil(orders.length / itemsPerPage);

  // L·∫•y orders cho trang hi·ªán t·∫°i
  const getCurrentPageOrders = () => {
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    return orders.slice(startIndex, endIndex);
  };

  const handlePrevPage = () => {
    setCurrentPage((prev) => Math.max(prev - 1, 1));
  };

  const handleNextPage = () => {
    setCurrentPage((prev) => Math.min(prev + 1, totalPages));
  };

  const handleCopy = () => {
    navigator.clipboard.writeText("hptools");
  };

  return (
    <div className="history-order">
      <div className="license-guide">
        <h2>H∆∞·ªõng D·∫´n K√≠ch Ho·∫°t B·∫£n Quy·ªÅn License üîë</h2>
        <div className="guide-steps">
          <p>
            B∆∞·ªõc 1: Ngay sau khi ho√†n t·∫•t giao d·ªãch mua Tool, vui l√≤ng sao ch√©p
            Key License t·ª´ b·∫£ng th√¥ng tin s·∫£n ph·∫©m.
          </p>
          <p>
            B∆∞·ªõc 2: Nh·∫•n v√†o n√∫t Download, sau ƒë√≥ gi·∫£i n√©n, m·ªü Tool, t·∫°i m√†n
            h√¨nh ch√≠nh, h√£y d√°n Key License v√†o √¥ tr·ªëng c·∫ßn ƒëi·ªÅn Key.
          </p>
          <div className="password-note">
            <span>Note: M·∫≠t kh·∫©u gi·∫£i n√©n File: </span>
            <span className="password">hptools</span>
            <button className="copy-btn" onClick={handleCopy}>
              <FontAwesomeIcon icon={faCopy} />
              Copy
            </button>
          </div>
          <p>
            B∆∞·ªõc 3: Nh·∫•n "K√≠ch Ho·∫°t" ƒë·ªÉ b·∫£n quy·ªÅn ƒë∆∞·ª£c x√°c nh·∫≠n v√† ƒëƒÉng k√Ω v·ªõi
            thi·∫øt b·ªã c·ªßa b·∫°n.
          </p>
          <p>
            B∆∞·ªõc 4: B·∫°n gi·ªù ƒë√¢y c√≥ th·ªÉ truy c·∫≠p v√† s·ª≠ d·ª•ng ƒë·∫ßy ƒë·ªß c√°c t√≠nh nƒÉng
            c·ªßa Tool.
          </p>
          <div className="warning">
            <span>
              L∆∞u √Ω: ƒê·ªÉ chuy·ªÉn Key License sang thi·∫øt b·ªã kh√°c, nh·∫•n v√†o "X√≥a
              Thi·∫øt B·ªã", t·∫£i Tool tr√™n m√°y m·ªõi v√† l·∫∑p l·∫°i qu√° tr√¨nh sao ch√©p v√†
              d√°n Key ƒë·ªÉ k√≠ch ho·∫°t.
            </span>
          </div>
          <button className="guide-video-btn">Xem video h∆∞·ªõng d·∫´n</button>
        </div>
      </div>

      <div className="history-header">
        <h2>Danh s√°ch tool c·ªßa t√¥i</h2>
        <div className="search-box">
          <input
            type="text"
            placeholder="Nh·∫≠p tool c·∫ßn t√¨m..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <button className="search-btn">
            <FontAwesomeIcon icon={faMagnifyingGlass} />
          </button>
        </div>
      </div>

      <div className="history-table">
        <div className="table-header">
          <div className="header-cell">STT</div>
          <div className="header-cell">T√™n tool</div>
          <div className="header-cell">LICENSEKEY</div>
          <div className="header-cell">Th·ªùi h·∫°n</div>
          <div className="header-cell">Thanh to√°n</div>
          <div className="header-cell">T√™n PC</div>
          <div className="header-cell">H√†nh ƒë·ªông</div>
        </div>
        {orders.length > 0 ? (
          getCurrentPageOrders().map((order, index) => (
            <div className="table-row" key={order.id}>
              <div className="table-cell" data-label="STT">
                {(currentPage - 1) * itemsPerPage + index + 1}
              </div>
              <div className="table-cell" data-label="T√™n tool">
                {order.toolName}
              </div>
              <div className="table-cell" data-label="LICENSEKEY">
                {order.licenseKey}
              </div>
              <div className="table-cell" data-label="Th·ªùi h·∫°n">
                {order.duration}
              </div>
              <div className="table-cell" data-label="Thanh to√°n">
                {order.payment}
              </div>
              <div className="table-cell" data-label="T√™n PC">
                {order.pcName}
              </div>
              <div className="table-cell" data-label="H√†nh ƒë·ªông">
                <button className="action-btn">X√≥a thi·∫øt b·ªã</button>
              </div>
            </div>
          ))
        ) : (
          <div className="empty-history">
            <img src="/src/assets/imgs/logo.png" alt="Empty" />
            <p>Danh s√°ch tr·ªëng</p>
          </div>
        )}
      </div>

      <div className="pagination">
        <button onClick={handlePrevPage} disabled={currentPage === 1}>
          &lt;
        </button>
        <div className="page-number">
          <span>{currentPage}</span> / <span>{totalPages}</span>
        </div>
        <button onClick={handleNextPage} disabled={currentPage === totalPages}>
          &gt;
        </button>
      </div>
    </div>
  );
};

export default HistoryOrder;
